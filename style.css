/* Algemene styling */
@layer base {


    body {
        background-color: hsl(135, 0%, 65%);
        margin: 0;
        margin-top: 5em;

        &::before {
            content: "";
        }
    }

    /* Costum Properties */
    :root {
        --power-btn-color: #c3af6d;
        --contorl-panel-color: #4f6065;
        --test-btn-color: #d14017;
        --bevestiging-btn-color: #928483;
        --main-font-family: 'Russo One', sans-serif;
        --spijker-color: lightgray;
    }

    h1 {
        font-family: var(--main-font-family);
        font-size: 2em;
        text-transform: uppercase;
        position: relative;


    }

    h2 {
        font-family: var(--main-font-family);
        color: color(display-p3 .665 .279 .255/1);
        text-shadow: 1px 1px 0 black, -1px -1px 0 black, 2px 2px 3px rgba(0, 0, 0, 0.2);
        margin-top: 0;
        background-color: #000;
        color: transparent;
        text-shadow: 0px 1px 1px rgba(255, 255, 255, 0.77);
        background-clip: text;
    }

    footer {
        background-color: #232a2c;
        padding: 2em;
    }

    p {
        text-align: center;
    }


}

@layer components {

    nav {
        display: flex;
        justify-content: center;
        gap: 1em;
        width: 100%;
        /* Ik zat hiermee te spelen omdat m'n nav niet tegen de bovenkant van de CSS aankwam, 
        toen gebeurde dit en vond ik het er zo wel cool uitzien, ook al weet ik dat het ook ander kan. */
        position: absolute;
        top: 0;
    }

    nav img {
        width: 2em;
        object-fit: contain;
        transition: 5s;

        &:hover {
            filter: blur(999px);
        }
    }

    span {
        width: 100%;
        display: flex;
        justify-content: space-between;
    }

    main {
        display: grid;
        place-items: center;
        text-align: center;
        background-color: rgb(128, 128, 128);
        margin: auto auto;
        margin-bottom: 1em;
        padding: 1em;
        max-width: 30em;
        box-shadow: black 0px 2px 4px 0px;
    }


    section {
        display: flex;
        gap: 1em;
        position: relative;
        padding: 1em;
        overflow: hidden;
        box-shadow: 0px 3px 4px 0px black;


        &::after {
            content: " ";
            position: absolute;
            inset: 0;
            filter: drop-shadow(.1em .2em .2em #000);


            background-image:
                linear-gradient(black, rgb(40, 40, 40)),
                linear-gradient(rgb(40, 40, 40), black),
                linear-gradient(rgb(40, 40, 40), rgb(40, 40, 40)),
                linear-gradient(rgb(40, 40, 40), rgb(40, 40, 40)),
                linear-gradient(rgb(40, 40, 40), rgb(40, 40, 40)),
                linear-gradient(rgb(40, 40, 40), rgb(40, 40, 40));

            background-size:
                100% 1em,
                100% 1em,
                1em 100%,
                1em 100%,
                1em 100%,
                1em 100%;

            background-position:
                left top,
                left bottom,
                left top,
                3em top,
                6em top,
                right top;

            background-repeat: no-repeat;
        }

    }

    div {
        overflow: hidden;
    }

    ul {
        margin: 0;
        padding: 0;
        list-style: none;

        display: grid;

        perspective: 20em;
        transform-style: preserve-3d;
    }

    li {
        grid-area: 1/1;
        width: 2em;
        aspect-ratio: 1/1;

        display: grid;
        place-items: center;

        background-color: black;
        color: orange;
        animation: rollen var(--dur) infinite linear;

        animation-delay: calc(var(--dur) / -10 * var(--i));
    }

    div:nth-of-type(1) li {
        --dur: 100s;
        --steps: 10;
    }

    div:nth-of-type(2) li {
        --dur: 10s;
        --steps: 10;
    }

    div:nth-of-type(3) li {
        --dur: 1s;
        --steps: 10;
    }





    /* Spijkers */

    main span div:nth-of-type(1) {
        background-color: var(--spijker-color);
        padding: 1em;
        border-radius: 1em;
        position: relative;
        box-shadow: 0 0 0px 2px black;


        &::before {
            content: "";
            padding: 1em .1em;
            background-color: rgb(105, 105, 105);
            position: absolute;
            top: 0;
            left: 50%;
            transform: translateX(-50%) rotate(-45deg);
        }
    }



    main span div:nth-of-type(2) {
        background-color: var(--spijker-color);
        padding: 1em;
        border-radius: 1em;
        position: relative;
        box-shadow: 0 0 0px 2px black;

        &::before {
            content: "";
            padding: 1em .1em;
            background-color: rgb(105, 105, 105);
            position: absolute;
            top: 0;
            left: 50%;
            transform: translateX(-50%) rotate(45deg);
        }
    }

    body>div {
        display: flex;
        justify-content: center;
        align-items: center;
    }


    form {
        display: grid;
        grid-template-columns: repeat(4, minmax(8em, 1fr));
        gap: 2em;
        background-color: var(--contorl-panel-color);
        height: 100%;
        width: 100%;
        margin-top: 3em;
    }

    @media screen and (max-width: 735px) {
        form {
            grid-template-columns: repeat(2, minmax(8em, 1fr));
            justify-items: center;
        }
    }

    @media screen and (max-width: 510px) {
        form {
            grid-template-columns: repeat(1, minmax(8em, 1fr));
        }

    }


    fieldset {
        border: none;
        margin-top: 1rem;
        position: relative;
        z-index: 1;
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    form fieldset p {
        color: black;
        font-family: var(--main-font-family);
        padding: .5rem;
        margin-top: 2rem;
        max-width: 7rem;
        background-color: rgb(188, 188, 188);
        box-shadow: 0px 0px 5px 1px black;
    }

    form fieldset img {
        width: 2rem;
        filter: invert(25%) sepia(51%) saturate(4000%) hue-rotate(354deg) brightness(85%) contrast(92%);
        /* geÃ«xpirimenteerd met filter */
    }

    /* Power up button */

    form fieldset:nth-of-type(1) button {
        background-color: var(--power-btn-color);
        width: 8rem;
        height: 8rem;
        border: none;
        box-shadow: 0px 5px 0px 0px black, 0px 20px 0px 0px var(--bevestiging-btn-color);
        cursor: pointer;
        transition: .1s;


        &:hover {
            background-color: rgb(146, 116, 61);
        }

        &:active {
            background-color: orange;
            box-shadow: 0px 5px 0px 0px rgba(0, 0, 0, .2), 0px 0px 10px 5px orange;
            translate: 0em 1.3em;
        }

    }

    /* Power down button */

    form fieldset:nth-of-type(2) button {
        background-color: var(--power-btn-color);
        width: 8rem;
        height: 8rem;
        border: none;
        box-shadow: 0px 5px 0px 0px black, 0px 20px 0px 0px gray;
        cursor: pointer;
        transition: .1s;


        img {
            transform: rotate(180deg);
        }

        &:hover {
            background-color: rgb(146, 116, 61);
        }

        &:active {
            background-color: orange;
            box-shadow: 0px 5px 0px 0px rgba(0, 0, 0, .2), 0px 0px 10px 5px orange;
            translate: 0em 1.3em;
        }
    }

    /* Big red button */

    form fieldset:nth-of-type(3) button {
        background-color: var(--test-btn-color);
        width: 8rem;
        height: 8rem;
        border-radius: 100%;
        border: none;
        box-shadow: 0px 0px 0px 3px black, 0px 7px 2px 0px black, 0px 10px 0px 0px black;
        cursor: pointer;
        transition: .1s;


        &:hover {
            background-color: #962312;
        }

        &:active {
            background-color: color(display-p3 1 0 0);
            box-shadow: 0px 5px 0px 0px rgba(0, 0, 0, .2), 0px 0px 10px 5px rgb(224, 0, 0);
            translate: 0em .8em;
        }
    }

    /* Noodknop */

    form fieldset:nth-of-type(4) button {
        background-color: var(--bevestiging-btn-color);
        padding: 2rem;
        border-radius: 50%;
        width: 8rem;
        height: 8rem;
        aspect-ratio: 1/1;
        border: none;
        box-shadow: 0px 2px 3px 0px black;
        transition: .2s;
        position: relative;

        &:hover {
            box-shadow: inset 0 0 0 3px white;
        }

        &:active {
            transform: rotate(90deg);
        }

        /* Experimemteren met :before & :after */
        &::before {
            content: "";
            padding: 2em;
            background-color: black;
            position: absolute;
            border-radius: 100%;
            height: 6rem;
            transform: translate(-.7rem, -3.5rem);
        }
    }

    form fieldset:nth-of-type(4) button img {
        filter: invert(70%) sepia(0%) saturate(0%) hue-rotate(331deg) brightness(103%) contrast(101%);
        scale: .4;
        translate: .1em -3.5em;
    }
}






@layer utilities {
    @keyframes rollen {
        0% {
            transform:
                translateZ(-2.8em) rotateX(0deg) translateZ(3em);
        }

        100% {
            transform:
                translateZ(-2.8em) rotateX(-360deg) translateZ(3em);
        }
    }

    :nth-of-type(1) {
        --i: 1
    }

    :nth-of-type(2) {
        --i: 2
    }

    :nth-of-type(3) {
        --i: 3
    }

    :nth-of-type(4) {
        --i: 4
    }

    :nth-of-type(5) {
        --i: 5
    }

    :nth-of-type(6) {
        --i: 6
    }

    :nth-of-type(7) {
        --i: 7
    }

    :nth-of-type(8) {
        --i: 8
    }

    :nth-of-type(9) {
        --i: 9
    }

    :nth-of-type(10) {
        --i: 10
    }

    legend {
        display: none;
    }


    @keyframes powerCounter {
        0% {
            transform: rotatex(0turn) translatez(min(50vw, 13em));
        }

        100% {
            transform: rotatex(1turn) translatez(min(50vw, 13em));
        }
    }

    body>img {
        display: none;
    }

    html:has(form fieldset:nth-of-type(4) button:active) body>img {
        position: absolute;
        display: block;
        inset: 0;
        width: 100%;
        opacity: 20%;
        z-index: 1;
    }

    /* De animatie spiegeld, had niet genoeg tijd om dit nog aan te passen */
    html:has(form fieldset:nth-of-type(2) button:active) li {
        animation: rollen var(--dur) infinite linear reverse;
        animation-delay: calc(var(--dur) / 10 * var(--i));
        color: cyan;
    }

    html:has(form fieldset:nth-of-type(3) button:active) body::before {
        content: "";
        inset: 0;
        background-image: none;
        position: absolute;
        z-index: 2;
        animation: alarm 5s linear infinite;

    }

    html:has(form fieldset:nth-of-type(1) button:active) li {
        background-color: black;
        color: limegreen;
        text-shadow: 0px 0px 3px lightgreen;
    }

    @keyframes alarm {
        0% {
            background-image: radial-gradient(transparent 0, red 90% 100%);
        }

        25% {
            background-image: radial-gradient(transparent 0, red 50% 100%);
        }

        50% {
            background-image: radial-gradient(transparent 0, red 90% 100%);
        }

        75% {
            background-image: radial-gradient(transparent 0, red 50% 100%);
        }

        100% {
            background-image: radial-gradient(transparent 0, transparent 90% 100%);
        }
    }

}